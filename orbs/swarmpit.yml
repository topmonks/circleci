version: 2.1

description: >
  Deploy your stacks to Docker Swarm via Swarmpit API.

display:
  home_url: https://swarmpit.io/
  source_url: https://github.com/topmonks/circleci

commands:
  deploy_stack:
    description: >
      Deploys docker-compose.yml file as a stack via Swarmpit API. Creates new or updates an existing stack.
      Swarmpit API Key and URL should be set via Context with SWARMPIT_API_URL and SWARMPIT_API_KEY variables.
    parameters:
      stack_name:
        type: string
        description: Name of the stack to deploy.
      compose_file_path:
        type: string
        description: Path to the stack definition (docker-compose) file.
        default: docker-compose.yml
      swarmpit_api_url:
        type: string
        description: URL of the API endpoint of your Swarmpit instance (eg. https://swarmpit.my.cloud/api).
        default: "$SWARMPIT_API_URL"
      swarmpit_api_key:
        type: string
        description: API Key to access the Swarmpit API. You will get it in Swarmpit account management.
        default: "$SWARMPIT_API_KEY"
    steps:
      - run:
          name: Deploy stack << parameters.stack_name >>
          description: >
            Checks for an existing stack and creates or updates the stack with docker-compose file definition.
          command: |
            # Check for existing stack: 200 - exists, 400 - doesn't exist
            STATUS=$(curl -I -sS -o /dev/null -w "%{http_code}" -X GET -H 'Accept: application/json' -H "authorization: << parameters.swarmpit_api_key >>" "<< parameters.swarmpit_api_url >>/stacks/<< parameters.stack_name >>/compose")
            if [ "$STATUS" = "200" ]; then echo 'Will update stack << parameters.stack_name >>'; else echo 'Will create stack << parameters.stack_name >>'; fi
            URL="<< parameters.swarmpit_api_url >>/stacks$([ "$STATUS" = "200" ] && echo '/<< parameters.stack_name >>' || echo '')"
            jq -n --arg compose "$(< << parameters.compose_file_path >>)" '{ "name": "<< parameters.stack_name >>", "spec": { "compose": $compose } }' | \
            curl -f -X POST -d @- -H 'Content-Type: application/json' -H 'Accept: application/json' -H "authorization: << parameters.swarmpit_api_key >>" "$URL"
            # TODO: Improve error handling. We currently propagate Error status to exit code, but error response from server is swalloved.
executors:
  default:
    description: |
      The docker container to use when running this orb's jobs
    docker:
      - image: '<<parameters.image>>:<<parameters.tag>>'
    parameters:
      image:
        default: circleci/python
        description: Docker image name
        type: string
      tag:
        default: '3.6'
        description: Image tag
        type: string

jobs:
  deploy:
    description: Deploy stack to Swarmpit
    executor: << parameters.executor >>
    parameters:
      executor:
        type: executor
        default: default
        description: |
          Executor to use for this job, defaults to this orb's `default` executor
      stack_name:
        type: string
        description: Name of the stack to deploy.
      compose_file_path:
        type: string
        description: Path to the stack definition (docker-compose) file.
        default: docker-compose.yml
      swarmpit_api_url:
        type: string
        description: URL of the API endpoint of your Swarmpit instance (eg. https://swarmpit.my.cloud/api).
        default: "$SWARMPIT_API_URL"
      swarmpit_api_key:
        type: string
        description: API Key to access the Swarmpit API. You will get it in Swarmpit account management.
        default: "$SWARMPIT_API_KEY"
    steps:
      - checkout
      - deploy_stack:
          stack_name: << parameters.stack_name >>
          compose_file_path: << parameters.compose_file_path >>
          swarmpit_api_url: << parameters.swarmpit_api_url >>
          swarmpit_api_key: << parameters.swarmpit_api_key >>

examples:
  stack_deploy:
    description: >
      Push the newly built image to Docker Hub and then deploy the stack definition in ./docker-compose.yml to the Swarm.
      Swarmpit API endpoint and API Key are stored in the org-swarmpit CircleCI context.
    usage:
      version: 2.1

      orbs:
        docker: circleci/docker@1.4.0
        swarmpit: topmonks/swarmpit@1.0.0

      workflows:
        build_and_deploy:
          jobs:
            - docker/publish:
                name: docker-publish
                context: org-docker
                image: my-org/my-service
                tag: latest
            - swarmpit/deploy:
                stack_name: my-service
                context: org-swarmpit
                requires:
                  - docker-publish
  stack_deploy_job:
    description: >
      Push the newly built image to Docker Hub and then deploy the stack definition in ./docker-compose.yml to the Swarm.
      Swarmpit API endpoint and API Key are stored in the org-swarmpit CircleCI context.
    usage:
      version: 2.1

      orbs:
        docker: circleci/docker@1.4.0
        swarmpit: topmonks/swarmpit@1.0.0

      jobs:
        docker_deploy:
          executor: docker/docker
          steps:
            - setup_remote_docker
            - checkout
            - docker/check
            - docker/push:
                image: my-org/my-service
                tag: latest
            - swarmpit/deploy_stack:
                stack_name: my-service

      workflows:
        build_and_deploy:
          jobs:
            - docker_deploy:
                context: org-swarmpit
                filters:
                  branches:
                    only: trunk
